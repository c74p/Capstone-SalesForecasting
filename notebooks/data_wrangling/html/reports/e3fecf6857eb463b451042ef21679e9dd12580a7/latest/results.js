(function () {

    window.RESULTS = {"steps": [{"name": "S01-import.py", "status": {"uuid": "99aaafc9a9b0a098ffaa6febd06982d4a6811c79", "reference_id": "1", "name": "S01-import.py", "muted": false, "last_modified": 1549404468.208897, "last_display_update": 1549404468.2086847, "dirty": false, "is_dirty": false, "run": true, "error": false}, "has_error": null, "body": "<style data-style=\"cdi-css-3627f2-hfstuota\">\n  #cdi-project-step-3627f2-hfstuota  .cd-step-elapsed {\n    display: none;\n    position: absolute;\n    z-index: 20;\n    background-color: #555;\n    border: 1px solid #444;\n    color: #EEE;\n    padding: 0.25em 1em;\n    align-items: center;\n    right: 0;\n  }\n  #cdi-project-step-3627f2-hfstuota .cd-step-elapsed__header {\n    margin-right: 10px;\n  }\n  #cdi-project-step-3627f2-hfstuota .cd-step-elapsed__value {\n    font-size: 1.5rem;\n  }\n  #cdi-project-step-3627f2-hfstuota .cd-step-stopwatch {\n    margin-right: 10px;\n    margin-top: 2px;\n    cursor: zoom-in;\n  }\n  #cdi-project-step-3627f2-hfstuota .cd-step-stopwatch:hover .cd-step-elapsed {\n    display: block;\n  }\n</style>\n\n<div class=\"cd-project-step\"\n     id=\"cdi-project-step-3627f2-hfstuota\"\n     data-step-name=\"S01-import.py\"\n     data-step-updated=\"1549404468.2086847\"\n     style=\"display:block\"\n>\n  <a class=\"step-anchor\" name=\"S01-import.py\" data-type=\"\"></a>\n  <div class=\"cd-project-step__header cd-project-step__header--standard\"\n       data-default-modifier=\"cd-project-step__header--standard\"\n  >\n\n    <div\n      id=\"cdi-title-box-3627f2-hfstuota\"\n      class=\"title-box clicker opened\"\n      data-closes=\"#cdi-body-3627f2-hfstuota|#cdi-code-3627f2-hfstuota|#cdi-cd-StdErr__body-3627f2-hfstuota\"\n      data-opens=\"#cdi-body-3627f2-hfstuota\"\n      data-marks-closed=\"#cdi-code-toggler-3627f2-hfstuota|#cdi-cd-StdErr__titleBox-3627f2-hfstuota\"\n      onclick=\"CAULDRON.collapse('cdi-title-box-3627f2-hfstuota')\"\n    >\n      \n      <i class=\"material-icons closed-icon\">keyboard_arrow_down</i>\n      <i class=\"material-icons opened-icon\">keyboard_arrow_up</i>\n      \n      <div>\n        <div class=\"title cd-step-title\">S01-import.py</div>\n        \n      </div>\n    </div>\n\n    <div class=\"spacer\"> </div>\n\n    <div class=\"cd-step-stopwatch\">\n      <i class=\"material-icons md-18\">timer</i>\n      <div class=\"cd-step-elapsed\">\n        <div class=\"cd-step-elapsed__header\">Elapsed Time:</div>\n        <div class=\"cd-step-elapsed__value\">00:02.25</div>\n      </div>\n    </div>\n\n    <div class=\"button-bar\">\n      \n      <div id=\"cdi-code-toggler-3627f2-hfstuota\"\n           class=\"clicker closed centered\"\n           data-closes=\"#cdi-code-3627f2-hfstuota\"\n           data-opens=\"#cdi-code-3627f2-hfstuota\"\n           onclick=\"CAULDRON.collapse('cdi-code-toggler-3627f2-hfstuota')\">\n        code\n        <i class=\"material-icons closed-icon\">keyboard_arrow_down</i>\n        <i class=\"material-icons opened-icon\">keyboard_arrow_up</i>\n      </div>\n      \n    </div>\n  </div>\n\n  \n  <div class=\"cd-CodeBlock code-box\"\n       id=\"cdi-code-3627f2-hfstuota\"\n       style=\"display:none\"\n  >\n    <div class=\"cd-CodeBlock__toolbar code-toolbar\">\n      <div class=\"spacer\"></div>\n      <div class=\"cd-CodeBlock__toolButton tool-button\"\n           onclick=\"CAULDRON.changeFontSize('#cdi-code-3627f2-hfstuota .code-wrapper', -1)\"\n      >\n        -\n      </div>\n      <div class=\"cd-CodeBlock__toolButton tool-button\"\n           onclick=\"CAULDRON.changeFontSize('#cdi-code-3627f2-hfstuota .code-wrapper', 0)\"\n      >\n        100%\n      </div>\n      <div class=\"cd-CodeBlock__toolButton tool-button\"\n           onclick=\"CAULDRON.changeFontSize('#cdi-code-3627f2-hfstuota .code-wrapper', 1)\"\n      >\n        +\n      </div>\n    </div>\n    <div class=\"cd-CodeBlock__wrapper code-wrapper\"\n         data-font-size=\"0.6\"\n         data-font-size-default=\"0.6\"\n         style=\"font-size: 0.6em\"\n    >\n      <div class=\"cd-CodeBlock__FileBox code-file-box\">\n        <table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre>  1\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n 10\n 11\n 12\n 13\n 14\n 15\n 16\n 17\n 18\n 19\n 20\n 21\n 22\n 23\n 24\n 25\n 26\n 27\n 28\n 29\n 30\n 31\n 32\n 33\n 34\n 35\n 36\n 37\n 38\n 39\n 40\n 41\n 42\n 43\n 44\n 45\n 46\n 47\n 48\n 49\n 50\n 51\n 52\n 53\n 54\n 55\n 56\n 57\n 58\n 59\n 60\n 61\n 62\n 63\n 64\n 65\n 66\n 67\n 68\n 69\n 70\n 71\n 72\n 73\n 74\n 75\n 76\n 77\n 78\n 79\n 80\n 81\n 82\n 83\n 84\n 85\n 86\n 87\n 88\n 89\n 90\n 91\n 92\n 93\n 94\n 95\n 96\n 97\n 98\n 99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117</pre></div></td><td class=\"code\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">cauldron</span> <span class=\"kn\">as</span> <span class=\"nn\">cd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s1\">&#39;../../src/data&#39;</span><span class=\"p\">)</span>\n<span class=\"kn\">import</span> <span class=\"nn\">make_dataset</span> <span class=\"c1\"># NOQA, need the line above to get directories right</span>\n\n<span class=\"c1\"># Config filepaths</span>\n<span class=\"n\">PROJ_ROOT</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">abspath</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">pardir</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">pardir</span><span class=\"p\">))</span>\n<span class=\"n\">cd</span><span class=\"o\">.</span><span class=\"n\">shared</span><span class=\"o\">.</span><span class=\"n\">PROJ_ROOT</span> <span class=\"o\">=</span> <span class=\"n\">PROJ_ROOT</span>\n<span class=\"n\">cd</span><span class=\"o\">.</span><span class=\"n\">shared</span><span class=\"o\">.</span><span class=\"n\">raw_directory</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">PROJ_ROOT</span><span class=\"p\">,</span> <span class=\"s1\">&#39;data&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;raw&#39;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Pull in all csvs, ignoring test.csv and submission.csv because no</span>\n<span class=\"c1\"># target-variable data in those</span>\n<span class=\"n\">dfs_dict</span> <span class=\"o\">=</span> <span class=\"n\">make_dataset</span><span class=\"o\">.</span><span class=\"n\">import_csvs</span><span class=\"p\">(</span><span class=\"n\">cd</span><span class=\"o\">.</span><span class=\"n\">shared</span><span class=\"o\">.</span><span class=\"n\">directory</span><span class=\"p\">,</span>\n                                    <span class=\"n\">ignore_files</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;test.csv&#39;</span><span class=\"p\">,</span>\n                                                  <span class=\"s1\">&#39;sample_submission.csv&#39;</span><span class=\"p\">],</span>\n                                    <span class=\"n\">header</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                                    <span class=\"n\">low_memory</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">cd</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">markdown</span><span class=\"p\">(</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    #Import dataframes</span>\n\n<span class=\"sd\">    Here we&#39;ll import the dataframes in the directory and show the</span>\n<span class=\"sd\">    head of each. \\n</span>\n<span class=\"sd\">    - Note that the directory /data/raw may contain a couple of other files</span>\n<span class=\"sd\">    like &#39;test.csv&#39; or &#39;sample_submission.csv&#39;, but they don&#39;t add any new</span>\n<span class=\"sd\">    information for our current purposes.\\n</span>\n\n<span class=\"sd\">    ## train.csv</span>\n<span class=\"sd\">    This is the most important file - information by store by date. \\n</span>\n<span class=\"sd\">    - Sales is our target variable. \\n</span>\n<span class=\"sd\">    - Customers is the number of customers on that date.\\n</span>\n<span class=\"sd\">    - Open and Promo are as they sound, and we don&#39;t have more information</span>\n<span class=\"sd\">    than that.\\n</span>\n<span class=\"sd\">    - StateHoliday and SchoolHoliday are as they sound. Note that StateHoliday</span>\n<span class=\"sd\">    can be a (public holiday), b (Easter), c (Christmas), or 0 (none).\\n</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"p\">)</span>\n\n<span class=\"n\">cd</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">table</span><span class=\"p\">(</span><span class=\"n\">dfs_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;train.csv&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">())</span>\n\n\n<span class=\"n\">cd</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">markdown</span><span class=\"p\">(</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    ## store.csv</span>\n<span class=\"sd\">    This file has information about each particular store.\\n</span>\n<span class=\"sd\">    - Store type: one of &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;\\n</span>\n<span class=\"sd\">    - Assortment: &#39;a&#39; = basic, &#39;b&#39; = extra, &#39;c&#39; = extended\\n</span>\n<span class=\"sd\">    - CompetitionDistance is in meters. The closest competitor to any given</span>\n<span class=\"sd\">    store is 20 meters, while the furthest &#39;closest competitor&#39; is nearly 50</span>\n<span class=\"sd\">    miles from a Rossmann store.\\n</span>\n<span class=\"sd\">    - CompetitionOpenSinceMonth and Year are as they sound. Most of the</span>\n<span class=\"sd\">    competitors have been opened relatively recently.\\n</span>\n<span class=\"sd\">    - Promo2: according to data/raw/description.txt, Promo2 is a continuing</span>\n<span class=\"sd\">    and consecutive promotion for some stores. 0 = not participating, 1 = </span>\n<span class=\"sd\">    participating.\\n</span>\n<span class=\"sd\">    - Promo2SinceWeek and Year are as they sound. Note that if Promo2 = 0, a</span>\n<span class=\"sd\">    NaN value is meaningful here.\\n</span>\n<span class=\"sd\">    - PromoInterval: relative to Promo2.  Options are &#39;Jan,Apr,Jul,Oct&#39;,</span>\n<span class=\"sd\">    &#39;Feb,May,Aug,Nov&#39;, &#39;Mar,Jun,Sept,Dec&#39; - note that &#39;Sept&#39; here has 4</span>\n<span class=\"sd\">    characters.\\n</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"p\">)</span>\n\n<span class=\"n\">cd</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">table</span><span class=\"p\">(</span><span class=\"n\">dfs_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;store.csv&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">())</span>\n\n<span class=\"n\">cd</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">markdown</span><span class=\"p\">(</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    ## weather.csv</span>\n<span class=\"sd\">    This file has weather by state and date.\\n</span>\n<span class=\"sd\">    - file: This is the name of the state rather than its abbreviation, which</span>\n<span class=\"sd\">    necessitates the use of the store_states csv later.\\n</span>\n<span class=\"sd\">    - Other than Date, the rest of the file is various weather measurements.\\n</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"p\">)</span>\n\n<span class=\"n\">cd</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">table</span><span class=\"p\">(</span><span class=\"n\">dfs_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;weather.csv&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">())</span>\n\n<span class=\"n\">cd</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">markdown</span><span class=\"p\">(</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    ## googletrend.csv</span>\n<span class=\"sd\">    This file has google search trends by state and date.\\n</span>\n<span class=\"sd\">    - file: This is the state abbreviation, along with some other characters</span>\n<span class=\"sd\">    that we&#39;ll strip out.\\n</span>\n<span class=\"sd\">    - week: This is the week of the measurement.\\n</span>\n<span class=\"sd\">    - trend: this is the trend, which we&#39;ll concatenate to our dataframe.\\n</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"p\">)</span>\n\n<span class=\"n\">cd</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">table</span><span class=\"p\">(</span><span class=\"n\">dfs_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;googletrend.csv&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">())</span>\n\n<span class=\"n\">cd</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">markdown</span><span class=\"p\">(</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    ## store_states.csv</span>\n<span class=\"sd\">    This file lists the state that each store is in, so we can merge the</span>\n<span class=\"sd\">    dataframes together.\\n</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"p\">)</span>\n\n<span class=\"n\">cd</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">table</span><span class=\"p\">(</span><span class=\"n\">dfs_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;store_states.csv&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">())</span>\n\n\n<span class=\"n\">cd</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">markdown</span><span class=\"p\">(</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    ## state_names.csv</span>\n<span class=\"sd\">    This file lists state names and abbreviations, so we can merge the</span>\n<span class=\"sd\">    dataframes together.\\n</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"p\">)</span>\n\n<span class=\"n\">cd</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">table</span><span class=\"p\">(</span><span class=\"n\">dfs_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;state_names.csv&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># Make sure to share dfs_dict in memory for next step</span>\n<span class=\"n\">cd</span><span class=\"o\">.</span><span class=\"n\">shared</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"s1\">&#39;dfs_dict&#39;</span><span class=\"p\">,</span> <span class=\"n\">dfs_dict</span><span class=\"p\">)</span>\n</pre></div>\n</td></tr></table>\n      </div>\n    </div>\n  </div>\n  \n\n  \n  <div id=\"cdi-body-3627f2-hfstuota\"\n       class=\"cd-project-step-body\"\n       \n  >\n\n      \n      <div class=\"cd-ProjectStep__bodyInner\"><div\n    class=\"textbox markdown cd-Markdown\"\n    style=\"\"\n>\n  <h1>Import dataframes</h1>\n<p>Here we'll import the dataframes in the directory and show the\nhead of each. </p>\n<ul>\n<li>Note that the directory /data/raw may contain a couple of other files\nlike 'test.csv' or 'sample_submission.csv', but they don't add any new\ninformation for our current purposes.</li>\n</ul>\n<h2>train.csv</h2>\n<p>This is the most important file - information by store by date. </p>\n<ul>\n<li>\n<p>Sales is our target variable. </p>\n</li>\n<li>\n<p>Customers is the number of customers on that date.</p>\n</li>\n<li>\n<p>Open and Promo are as they sound, and we don't have more information\nthan that.</p>\n</li>\n<li>\n<p>StateHoliday and SchoolHoliday are as they sound. Note that StateHoliday\ncan be a (public holiday), b (Easter), c (Christmas), or 0 (none).</p>\n</li>\n</ul>\n</div><div class=\"data-table\">\n    <div id=\"table-22-07-48-138765-62585767\"></div>\n</div>\n\n<script>\n  (function () {\n    var data = [[1, 5, \"2015-07-31\", 5263, 555, 1, 1, \"0\", 1], [2, 5, \"2015-07-31\", 6064, 625, 1, 1, \"0\", 1], [3, 5, \"2015-07-31\", 8314, 821, 1, 1, \"0\", 1], [4, 5, \"2015-07-31\", 13995, 1498, 1, 1, \"0\", 1], [5, 5, \"2015-07-31\", 4822, 559, 1, 1, \"0\", 1]];\n\n    function heightMaker() {\n      return Math.min(\n          Math.round(0.7 * $(window).height()),\n          Math.round(26 * (data.length + 1.5))\n      );\n    }\n\n    var table = new window.Handsontable($('#table-22-07-48-138765-62585767')[0], {\n      data: data,\n      stretchH: 'all',\n      height: heightMaker,\n      rowHeaders: true,\n      colHeaders: [\"Store\", \"DayOfWeek\", \"Date\", \"Sales\", \"Customers\", \"Open\", \"Promo\", \"StateHoliday\", \"SchoolHoliday\"],\n      manualRowResize: true,\n      manualColumnResize: true,\n      manualRowMove: true,\n      manualColumnMove: true,\n      contextMenu: true,\n      autoWrapRow: true,\n      columnSorting: true,\n      copyPaste: true,\n      sortIndicator: true,\n      autoColumnSize: {samplingRatio: 23},\n      manualColumnFreeze: true\n    });\n\n  }());\n</script><div\n    class=\"textbox markdown cd-Markdown\"\n    style=\"\"\n>\n  <h2>store.csv</h2>\n<p>This file has information about each particular store.</p>\n<ul>\n<li>\n<p>Store type: one of 'a', 'b', 'c', 'd'</p>\n</li>\n<li>\n<p>Assortment: 'a' = basic, 'b' = extra, 'c' = extended</p>\n</li>\n<li>\n<p>CompetitionDistance is in meters. The closest competitor to any given\nstore is 20 meters, while the furthest 'closest competitor' is nearly 50\nmiles from a Rossmann store.</p>\n</li>\n<li>\n<p>CompetitionOpenSinceMonth and Year are as they sound. Most of the\ncompetitors have been opened relatively recently.</p>\n</li>\n<li>\n<p>Promo2: according to data/raw/description.txt, Promo2 is a continuing\nand consecutive promotion for some stores. 0 = not participating, 1 = \nparticipating.</p>\n</li>\n<li>\n<p>Promo2SinceWeek and Year are as they sound. Note that if Promo2 = 0, a\nNaN value is meaningful here.</p>\n</li>\n<li>\n<p>PromoInterval: relative to Promo2.  Options are 'Jan,Apr,Jul,Oct',\n'Feb,May,Aug,Nov', 'Mar,Jun,Sept,Dec' - note that 'Sept' here has 4\ncharacters.</p>\n</li>\n</ul>\n</div><div class=\"data-table\">\n    <div id=\"table-22-07-48-150905-31639006\"></div>\n</div>\n\n<script>\n  (function () {\n    var data = [[1, \"c\", \"a\", 1270.0, 9.0, 2008.0, 0, NaN, NaN, NaN], [2, \"a\", \"a\", 570.0, 11.0, 2007.0, 1, 13.0, 2010.0, \"Jan,Apr,Jul,Oct\"], [3, \"a\", \"a\", 14130.0, 12.0, 2006.0, 1, 14.0, 2011.0, \"Jan,Apr,Jul,Oct\"], [4, \"c\", \"c\", 620.0, 9.0, 2009.0, 0, NaN, NaN, NaN], [5, \"a\", \"a\", 29910.0, 4.0, 2015.0, 0, NaN, NaN, NaN]];\n\n    function heightMaker() {\n      return Math.min(\n          Math.round(0.7 * $(window).height()),\n          Math.round(26 * (data.length + 1.5))\n      );\n    }\n\n    var table = new window.Handsontable($('#table-22-07-48-150905-31639006')[0], {\n      data: data,\n      stretchH: 'all',\n      height: heightMaker,\n      rowHeaders: true,\n      colHeaders: [\"Store\", \"StoreType\", \"Assortment\", \"CompetitionDistance\", \"CompetitionOpenSinceMonth\", \"CompetitionOpenSinceYear\", \"Promo2\", \"Promo2SinceWeek\", \"Promo2SinceYear\", \"PromoInterval\"],\n      manualRowResize: true,\n      manualColumnResize: true,\n      manualRowMove: true,\n      manualColumnMove: true,\n      contextMenu: true,\n      autoWrapRow: true,\n      columnSorting: true,\n      copyPaste: true,\n      sortIndicator: true,\n      autoColumnSize: {samplingRatio: 23},\n      manualColumnFreeze: true\n    });\n\n  }());\n</script><div\n    class=\"textbox markdown cd-Markdown\"\n    style=\"\"\n>\n  <h2>weather.csv</h2>\n<p>This file has weather by state and date.</p>\n<ul>\n<li>\n<p>file: This is the name of the state rather than its abbreviation, which\nnecessitates the use of the store_states csv later.</p>\n</li>\n<li>\n<p>Other than Date, the rest of the file is various weather measurements.</p>\n</li>\n</ul>\n</div><div class=\"data-table\">\n    <div id=\"table-22-07-48-160691-27076645\"></div>\n</div>\n\n<script>\n  (function () {\n    var data = [[\"NordrheinWestfalen\", \"2013-01-01\", 8, 4, 2, 7, 5, 1, 94, 87, 65, 1013, 1005, 1001, 31.0, 12.0, 4.0, 39, 26, 58.0, 5.08, 6.0, \"Rain\", 215], [\"NordrheinWestfalen\", \"2013-01-02\", 7, 4, 1, 5, 3, 2, 93, 85, 78, 1028, 1022, 1014, 31.0, 14.0, 10.0, 24, 16, NaN, 0.0, 6.0, \"Rain\", 225], [\"NordrheinWestfalen\", \"2013-01-03\", 11, 8, 6, 10, 8, 4, 100, 93, 77, 1035, 1030, 1026, 31.0, 8.0, 2.0, 26, 21, NaN, 1.02, 7.0, \"Rain\", 240], [\"NordrheinWestfalen\", \"2013-01-04\", 9, 9, 8, 9, 9, 8, 100, 94, 87, 1036, 1035, 1034, 11.0, 5.0, 2.0, 23, 14, NaN, 0.25, 7.0, \"Rain\", 263], [\"NordrheinWestfalen\", \"2013-01-05\", 8, 8, 7, 8, 7, 6, 100, 94, 87, 1035, 1034, 1033, 10.0, 6.0, 3.0, 16, 10, NaN, 0.0, 7.0, \"Rain\", 268]];\n\n    function heightMaker() {\n      return Math.min(\n          Math.round(0.7 * $(window).height()),\n          Math.round(26 * (data.length + 1.5))\n      );\n    }\n\n    var table = new window.Handsontable($('#table-22-07-48-160691-27076645')[0], {\n      data: data,\n      stretchH: 'all',\n      height: heightMaker,\n      rowHeaders: true,\n      colHeaders: [\"file\", \"Date\", \"Max_TemperatureC\", \"Mean_TemperatureC\", \"Min_TemperatureC\", \"Dew_PointC\", \"MeanDew_PointC\", \"Min_DewpointC\", \"Max_Humidity\", \"Mean_Humidity\", \"Min_Humidity\", \"Max_Sea_Level_PressurehPa\", \"Mean_Sea_Level_PressurehPa\", \"Min_Sea_Level_PressurehPa\", \"Max_VisibilityKm\", \"Mean_VisibilityKm\", \"Min_VisibilitykM\", \"Max_Wind_SpeedKm_h\", \"Mean_Wind_SpeedKm_h\", \"Max_Gust_SpeedKm_h\", \"Precipitationmm\", \"CloudCover\", \"Events\", \"WindDirDegrees\"],\n      manualRowResize: true,\n      manualColumnResize: true,\n      manualRowMove: true,\n      manualColumnMove: true,\n      contextMenu: true,\n      autoWrapRow: true,\n      columnSorting: true,\n      copyPaste: true,\n      sortIndicator: true,\n      autoColumnSize: {samplingRatio: 23},\n      manualColumnFreeze: true\n    });\n\n  }());\n</script><div\n    class=\"textbox markdown cd-Markdown\"\n    style=\"\"\n>\n  <h2>googletrend.csv</h2>\n<p>This file has google search trends by state and date.</p>\n<ul>\n<li>\n<p>file: This is the state abbreviation, along with some other characters\nthat we'll strip out.</p>\n</li>\n<li>\n<p>week: This is the week of the measurement.</p>\n</li>\n<li>\n<p>trend: this is the trend, which we'll concatenate to our dataframe.</p>\n</li>\n</ul>\n</div><div class=\"data-table\">\n    <div id=\"table-22-07-48-170341-8948551\"></div>\n</div>\n\n<script>\n  (function () {\n    var data = [[\"Rossmann_DE_SN\", \"2012-12-02 - 2012-12-08\", 96], [\"Rossmann_DE_SN\", \"2012-12-09 - 2012-12-15\", 95], [\"Rossmann_DE_SN\", \"2012-12-16 - 2012-12-22\", 91], [\"Rossmann_DE_SN\", \"2012-12-23 - 2012-12-29\", 48], [\"Rossmann_DE_SN\", \"2012-12-30 - 2013-01-05\", 67]];\n\n    function heightMaker() {\n      return Math.min(\n          Math.round(0.7 * $(window).height()),\n          Math.round(26 * (data.length + 1.5))\n      );\n    }\n\n    var table = new window.Handsontable($('#table-22-07-48-170341-8948551')[0], {\n      data: data,\n      stretchH: 'all',\n      height: heightMaker,\n      rowHeaders: true,\n      colHeaders: [\"file\", \"week\", \"trend\"],\n      manualRowResize: true,\n      manualColumnResize: true,\n      manualRowMove: true,\n      manualColumnMove: true,\n      contextMenu: true,\n      autoWrapRow: true,\n      columnSorting: true,\n      copyPaste: true,\n      sortIndicator: true,\n      autoColumnSize: {samplingRatio: 23},\n      manualColumnFreeze: true\n    });\n\n  }());\n</script><div\n    class=\"textbox markdown cd-Markdown\"\n    style=\"\"\n>\n  <h2>store_states.csv</h2>\n<p>This file lists the state that each store is in, so we can merge the\ndataframes together.</p>\n</div><div class=\"data-table\">\n    <div id=\"table-22-07-48-179008-69013492\"></div>\n</div>\n\n<script>\n  (function () {\n    var data = [[1, \"HE\"], [2, \"TH\"], [3, \"NW\"], [4, \"BE\"], [5, \"SN\"]];\n\n    function heightMaker() {\n      return Math.min(\n          Math.round(0.7 * $(window).height()),\n          Math.round(26 * (data.length + 1.5))\n      );\n    }\n\n    var table = new window.Handsontable($('#table-22-07-48-179008-69013492')[0], {\n      data: data,\n      stretchH: 'all',\n      height: heightMaker,\n      rowHeaders: true,\n      colHeaders: [\"Store\", \"State\"],\n      manualRowResize: true,\n      manualColumnResize: true,\n      manualRowMove: true,\n      manualColumnMove: true,\n      contextMenu: true,\n      autoWrapRow: true,\n      columnSorting: true,\n      copyPaste: true,\n      sortIndicator: true,\n      autoColumnSize: {samplingRatio: 23},\n      manualColumnFreeze: true\n    });\n\n  }());\n</script><div\n    class=\"textbox markdown cd-Markdown\"\n    style=\"\"\n>\n  <h2>state_names.csv</h2>\n<p>This file lists state names and abbreviations, so we can merge the\ndataframes together.</p>\n</div><div class=\"data-table\">\n    <div id=\"table-22-07-48-186721-79823807\"></div>\n</div>\n\n<script>\n  (function () {\n    var data = [[\"BadenWuerttemberg\", \"BW\"], [\"Bayern\", \"BY\"], [\"Berlin\", \"BE\"], [\"Brandenburg\", \"BB\"], [\"Bremen\", \"HB\"]];\n\n    function heightMaker() {\n      return Math.min(\n          Math.round(0.7 * $(window).height()),\n          Math.round(26 * (data.length + 1.5))\n      );\n    }\n\n    var table = new window.Handsontable($('#table-22-07-48-186721-79823807')[0], {\n      data: data,\n      stretchH: 'all',\n      height: heightMaker,\n      rowHeaders: true,\n      colHeaders: [\"StateName\", \"State\"],\n      manualRowResize: true,\n      manualColumnResize: true,\n      manualRowMove: true,\n      manualColumnMove: true,\n      contextMenu: true,\n      autoWrapRow: true,\n      columnSorting: true,\n      copyPaste: true,\n      sortIndicator: true,\n      autoColumnSize: {samplingRatio: 23},\n      manualColumnFreeze: true\n    });\n\n  }());\n</script><div style=\"height:0px\"> </div></div>\n  </div>\n  \n\n  \n\n  \n  <a class=\"step-anchor\" name=\"S01-import.py--end\" data-type=\"--end\"></a>\n</div>", "data": null, "includes": [], "cauldron_version": [0, 4, 5]}, {"name": "S02-merge.py", "status": {"uuid": "1bc57b4aeb4aaba28c2e6d593b69af42a6b897b2", "reference_id": "2", "name": "S02-merge.py", "muted": false, "last_modified": 1549404807.8420293, "last_display_update": 1549404807.7561057, "dirty": false, "is_dirty": false, "run": true, "error": false}, "has_error": null, "body": "<style data-style=\"cdi-css-3b569f-poqiqqro\">\n  #cdi-project-step-3b569f-poqiqqro  .cd-step-elapsed {\n    display: none;\n    position: absolute;\n    z-index: 20;\n    background-color: #555;\n    border: 1px solid #444;\n    color: #EEE;\n    padding: 0.25em 1em;\n    align-items: center;\n    right: 0;\n  }\n  #cdi-project-step-3b569f-poqiqqro .cd-step-elapsed__header {\n    margin-right: 10px;\n  }\n  #cdi-project-step-3b569f-poqiqqro .cd-step-elapsed__value {\n    font-size: 1.5rem;\n  }\n  #cdi-project-step-3b569f-poqiqqro .cd-step-stopwatch {\n    margin-right: 10px;\n    margin-top: 2px;\n    cursor: zoom-in;\n  }\n  #cdi-project-step-3b569f-poqiqqro .cd-step-stopwatch:hover .cd-step-elapsed {\n    display: block;\n  }\n</style>\n\n<div class=\"cd-project-step\"\n     id=\"cdi-project-step-3b569f-poqiqqro\"\n     data-step-name=\"S02-merge.py\"\n     data-step-updated=\"1549404807.7561057\"\n     style=\"display:block\"\n>\n  <a class=\"step-anchor\" name=\"S02-merge.py\" data-type=\"\"></a>\n  <div class=\"cd-project-step__header cd-project-step__header--standard\"\n       data-default-modifier=\"cd-project-step__header--standard\"\n  >\n\n    <div\n      id=\"cdi-title-box-3b569f-poqiqqro\"\n      class=\"title-box clicker opened\"\n      data-closes=\"#cdi-body-3b569f-poqiqqro|#cdi-code-3b569f-poqiqqro|#cdi-cd-StdErr__body-3b569f-poqiqqro\"\n      data-opens=\"#cdi-body-3b569f-poqiqqro\"\n      data-marks-closed=\"#cdi-code-toggler-3b569f-poqiqqro|#cdi-cd-StdErr__titleBox-3b569f-poqiqqro\"\n      onclick=\"CAULDRON.collapse('cdi-title-box-3b569f-poqiqqro')\"\n    >\n      \n      <i class=\"material-icons closed-icon\">keyboard_arrow_down</i>\n      <i class=\"material-icons opened-icon\">keyboard_arrow_up</i>\n      \n      <div>\n        <div class=\"title cd-step-title\">S02.py</div>\n        \n      </div>\n    </div>\n\n    <div class=\"spacer\"> </div>\n\n    <div class=\"cd-step-stopwatch\">\n      <i class=\"material-icons md-18\">timer</i>\n      <div class=\"cd-step-elapsed\">\n        <div class=\"cd-step-elapsed__header\">Elapsed Time:</div>\n        <div class=\"cd-step-elapsed__value\">00:16.80</div>\n      </div>\n    </div>\n\n    <div class=\"button-bar\">\n      \n      <div id=\"cdi-code-toggler-3b569f-poqiqqro\"\n           class=\"clicker closed centered\"\n           data-closes=\"#cdi-code-3b569f-poqiqqro\"\n           data-opens=\"#cdi-code-3b569f-poqiqqro\"\n           onclick=\"CAULDRON.collapse('cdi-code-toggler-3b569f-poqiqqro')\">\n        code\n        <i class=\"material-icons closed-icon\">keyboard_arrow_down</i>\n        <i class=\"material-icons opened-icon\">keyboard_arrow_up</i>\n      </div>\n      \n    </div>\n  </div>\n\n  \n  <div class=\"cd-CodeBlock code-box\"\n       id=\"cdi-code-3b569f-poqiqqro\"\n       style=\"display:none\"\n  >\n    <div class=\"cd-CodeBlock__toolbar code-toolbar\">\n      <div class=\"spacer\"></div>\n      <div class=\"cd-CodeBlock__toolButton tool-button\"\n           onclick=\"CAULDRON.changeFontSize('#cdi-code-3b569f-poqiqqro .code-wrapper', -1)\"\n      >\n        -\n      </div>\n      <div class=\"cd-CodeBlock__toolButton tool-button\"\n           onclick=\"CAULDRON.changeFontSize('#cdi-code-3b569f-poqiqqro .code-wrapper', 0)\"\n      >\n        100%\n      </div>\n      <div class=\"cd-CodeBlock__toolButton tool-button\"\n           onclick=\"CAULDRON.changeFontSize('#cdi-code-3b569f-poqiqqro .code-wrapper', 1)\"\n      >\n        +\n      </div>\n    </div>\n    <div class=\"cd-CodeBlock__wrapper code-wrapper\"\n         data-font-size=\"0.6\"\n         data-font-size-default=\"0.6\"\n         style=\"font-size: 0.6em\"\n    >\n      <div class=\"cd-CodeBlock__FileBox code-file-box\">\n        <table class=\"highlighttable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre> 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49</pre></div></td><td class=\"code\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">cauldron</span> <span class=\"kn\">as</span> <span class=\"nn\">cd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib</span>\n<span class=\"n\">matplotlib</span><span class=\"o\">.</span><span class=\"n\">use</span><span class=\"p\">(</span><span class=\"s1\">&#39;TkAgg&#39;</span><span class=\"p\">)</span> <span class=\"c1\"># NOQA, need this line for plotting</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"kn\">as</span> <span class=\"nn\">plt</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ion</span><span class=\"p\">()</span> <span class=\"c1\"># NOQA, need this line for plotting</span>\n<span class=\"kn\">import</span> <span class=\"nn\">seaborn</span> <span class=\"kn\">as</span> <span class=\"nn\">sns</span><span class=\"p\">;</span> <span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">()</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"kn\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">List</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">os</span><span class=\"o\">,</span> <span class=\"nn\">sys</span> <span class=\"c1\"># NOQA</span>\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s1\">&#39;../../src/data&#39;</span><span class=\"p\">)</span>\n<span class=\"kn\">import</span> <span class=\"nn\">make_dataset</span> <span class=\"c1\"># NOQA, need the lines above to get directories right</span>\n\n<span class=\"n\">cd</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">markdown</span><span class=\"p\">(</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    # Merge dataframes</span>\n<span class=\"sd\">    In order to merge the dataframes, we did the following:\\n</span>\n<span class=\"sd\">    - Cleaned each dataframe individually</span>\n<span class=\"sd\">        - For train.csv, store_states.csv, and state_names.csv, it was just</span>\n<span class=\"sd\">        making column names consistent\\n</span>\n<span class=\"sd\">        - For googletrend.csv, it was fixing &#39;file&#39; to be legitimate state</span>\n<span class=\"sd\">        names and changing the &#39;week&#39; format into actual dates\\n</span>\n<span class=\"sd\">        - For store.csv, it was replacing NaNs with the mean of the column\\n</span>\n<span class=\"sd\">        - For weather.csv, there were a few mistyped column names, and some</span>\n<span class=\"sd\">        NaNs that had to be replaced\\n\\n</span>\n<span class=\"sd\">    We end up with a dataframe with 1,050,330 rows: there are 942 stores, and</span>\n<span class=\"sd\">    there are 942 days from 2013-01-01 to 2015-07-31, so we have 942 * 1115 =</span>\n<span class=\"sd\">    1,050,330 rows.\\n</span>\n<span class=\"sd\">    Our table has 43 columns.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"p\">)</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"c1\"># If the wrangled dataframe is in the folder, use it - that&#39;s faster than</span>\n    <span class=\"c1\"># recreating the dataframe</span>\n    <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s1\">&#39;../../data/processed/wrangled_dataframe.csv&#39;</span><span class=\"p\">,</span> <span class=\"n\">header</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                     <span class=\"n\">low_memory</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\n<span class=\"k\">except</span><span class=\"p\">:</span>\n    <span class=\"c1\"># If not, create the dataframe</span>\n    <span class=\"c1\"># get file names</span>\n    <span class=\"c1\"># Note that I would love to not hard-code this, but Cauldron does not have</span>\n    <span class=\"c1\"># a cd.shared.all() or similar functionality</span>\n    <span class=\"n\">files_pulled</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;googletrend.csv&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;state_names.csv&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;store.csv&#39;</span><span class=\"p\">,</span>\n                               <span class=\"s1\">&#39;store_states.csv&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;train.csv&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;weather.csv&#39;</span><span class=\"p\">]</span>\n\n    <span class=\"n\">dfs_dict</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">cd</span><span class=\"o\">.</span><span class=\"n\">shared</span><span class=\"o\">.</span><span class=\"n\">dfs_dict</span>\n\n    <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">make_dataset</span><span class=\"o\">.</span><span class=\"n\">merge_dfs</span><span class=\"p\">(</span><span class=\"n\">dfs_dict</span><span class=\"p\">)</span>\n\n<span class=\"n\">cd</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"o\">.</span><span class=\"n\">table</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">())</span>\n</pre></div>\n</td></tr></table>\n      </div>\n    </div>\n  </div>\n  \n\n  \n  <div id=\"cdi-body-3b569f-poqiqqro\"\n       class=\"cd-project-step-body\"\n       \n  >\n\n      \n      <div class=\"cd-ProjectStep__bodyInner\"><div\n    class=\"textbox markdown cd-Markdown\"\n    style=\"\"\n>\n  <h1>Merge dataframes</h1>\n<p>In order to merge the dataframes, we did the following:</p>\n<ul>\n<li>\n<p>Cleaned each dataframe individually</p>\n<ul>\n<li>\n<p>For train.csv, store_states.csv, and state_names.csv, it was just\nmaking column names consistent</p>\n</li>\n<li>\n<p>For googletrend.csv, it was fixing 'file' to be legitimate state\nnames and changing the 'week' format into actual dates</p>\n</li>\n<li>\n<p>For store.csv, it was replacing NaNs with the mean of the column</p>\n</li>\n<li>\n<p>For weather.csv, there were a few mistyped column names, and some\nNaNs that had to be replaced</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>We end up with a dataframe with 1,050,330 rows: there are 942 stores, and\nthere are 942 days from 2013-01-01 to 2015-07-31, so we have 942 * 1115 =\n1,050,330 rows.</p>\n<p>Our table has 43 columns.</p>\n</div><div class=\"data-table\">\n    <div id=\"table-22-13-27-754158-23330522\"></div>\n</div>\n\n<script>\n  (function () {\n    var data = [[1, \"HE\", \"2013-01-01\", 8, 6, 3, 6, 3, 1, 93, 80, 59, 1015, 1008, 1006, 31.0, 12.0, 10.0, 23, 14, 39.0, 2.03, 6.0, \"Rain\", 206, \"c\", \"a\", 1270.0, 9.0, 2008.0, 0, 23.595446584938703, 2011.7635726795095, \"None\", 1, 0.0, 0.0, 0.0, 0.0, \"a\", 1.0, 61, \"2012-12-30\"], [56, \"HE\", \"2013-01-01\", 8, 6, 3, 6, 3, 1, 93, 80, 59, 1015, 1008, 1006, 31.0, 12.0, 10.0, 23, 14, 39.0, 2.03, 6.0, \"Rain\", 206, \"d\", \"c\", 6620.0, 3.0, 2012.0, 1, 10.0, 2014.0, \"Mar,Jun,Sept,Dec\", 1, 0.0, 0.0, 0.0, 0.0, \"a\", 1.0, 61, \"2012-12-30\"], [69, \"HE\", \"2013-01-01\", 8, 6, 3, 6, 3, 1, 93, 80, 59, 1015, 1008, 1006, 31.0, 12.0, 10.0, 23, 14, 39.0, 2.03, 6.0, \"Rain\", 206, \"c\", \"c\", 1130.0, 7.224704336399474, 2008.6688567674114, 1, 40.0, 2011.0, \"Jan,Apr,Jul,Oct\", 1, 0.0, 0.0, 0.0, 0.0, \"a\", 1.0, 61, \"2012-12-30\"], [77, \"HE\", \"2013-01-01\", 8, 6, 3, 6, 3, 1, 93, 80, 59, 1015, 1008, 1006, 31.0, 12.0, 10.0, 23, 14, 39.0, 2.03, 6.0, \"Rain\", 206, \"d\", \"c\", 1090.0, 8.0, 2009.0, 1, 10.0, 2014.0, \"Jan,Apr,Jul,Oct\", 1, 0.0, 0.0, 0.0, 0.0, \"a\", 1.0, 61, \"2012-12-30\"], [111, \"HE\", \"2013-01-01\", 8, 6, 3, 6, 3, 1, 93, 80, 59, 1015, 1008, 1006, 31.0, 12.0, 10.0, 23, 14, 39.0, 2.03, 6.0, \"Rain\", 206, \"d\", \"c\", 7890.0, 7.224704336399474, 2008.6688567674114, 1, 37.0, 2009.0, \"Jan,Apr,Jul,Oct\", 1, 0.0, 0.0, 0.0, 0.0, \"a\", 1.0, 61, \"2012-12-30\"]];\n\n    function heightMaker() {\n      return Math.min(\n          Math.round(0.7 * $(window).height()),\n          Math.round(26 * (data.length + 1.5))\n      );\n    }\n\n    var table = new window.Handsontable($('#table-22-13-27-754158-23330522')[0], {\n      data: data,\n      stretchH: 'all',\n      height: heightMaker,\n      rowHeaders: true,\n      colHeaders: [\"store\", \"state\", \"date\", \"max_temperature_c\", \"mean_temperature_c\", \"min_temperature_c\", \"dew_point_c\", \"mean_dew_point_c\", \"min_dew_point_c\", \"max_humidity\", \"mean_humidity\", \"min_humidity\", \"max_sea_level_pressureh_pa\", \"mean_sea_level_pressureh_pa\", \"min_sea_level_pressureh_pa\", \"max_visibility_km\", \"mean_visibility_km\", \"min_visibility_km\", \"max_wind_speed_km_h\", \"mean_wind_speed_km_h\", \"max_gust_speed_km_h\", \"precipitationmm\", \"cloud_cover\", \"events\", \"wind_dir_degrees\", \"store_type\", \"assortment\", \"competition_distance\", \"competition_open_since_month\", \"competition_open_since_year\", \"promo2\", \"promo2_since_week\", \"promo2_since_year\", \"promo_interval\", \"day_of_week\", \"sales\", \"customers\", \"open\", \"promo\", \"state_holiday\", \"school_holiday\", \"trend\", \"week_start\"],\n      manualRowResize: true,\n      manualColumnResize: true,\n      manualRowMove: true,\n      manualColumnMove: true,\n      contextMenu: true,\n      autoWrapRow: true,\n      columnSorting: true,\n      copyPaste: true,\n      sortIndicator: true,\n      autoColumnSize: {samplingRatio: 23},\n      manualColumnFreeze: true\n    });\n\n  }());\n</script><div style=\"height:0px\"> </div></div>\n  </div>\n  \n\n  \n\n  \n  <a class=\"step-anchor\" name=\"S02-merge.py--end\" data-type=\"--end\"></a>\n</div>", "data": null, "includes": [], "cauldron_version": [0, 4, 5]}], "includes": [], "settings": {"author": "", "id": "data_wrangling", "name": "data_wrangling", "naming_scheme": "S{{##}}-{{name}}.{{ext}}", "steps": ["S01-import.py", {"name": "S02-merge.py", "title": "S02.py"}], "summary": "", "title": "Data wrangling"}, "cauldron_version": [0, 4, 5]};

}());